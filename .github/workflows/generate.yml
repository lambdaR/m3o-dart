name: Build Dart Clients
on:
  repository_dispatch:
    types: [build_publish_dart]

jobs:
  generate:
    name: build dart clients and create new release
    runs-on: ubuntu-latest
    steps:
      - name: Check m3o-dart repo
        uses: actions/checkout@v2
        with:
          path: m3o-dart

      - name: Check micro/services repo
        uses: actions/checkout@v2
        with:
          repository: 'micro/services'
          path: services

      - name: Check m3o/m3o repo
        uses: actions/checkout@v2
        with:
          repository: 'm3o/m3o'
          path: m3o

      - name: Set up dart latest
        uses: dart-lang/setup-dart@v1.3
        with:
          sdk:  stable
        id: dart

      - name: Generate m3o-dart clients
        uses: m3o/m3o-generator-action@main
        with:
          target: 'dart'
          services_path: services

      - name: Adjust generated things before pushing
        working-directory: services
        
        run: |
          # sync the clients to m3o-dart/
          rsync -avz clients/dart/* ../m3o-dart/
          # sync the examples to m3o-dart/example
          rsync -avz examples/dart/* ../m3o-dart/example/

      - name: Install dependencies m3o-dart
        working-directory: m3o-dart
        run:  dart pub get

      - name: format m3o-dart
        working-directory: m3o-dart
        run:  dart format .

      - name: run generate Freezed m3o-dart
        working-directory: m3o-dart
        run:  dart pub run build_runner build --delete-conflicting-outputs

      - name: update dart version number
        working-directory: m3o-dart
        run: |
          oldver=$(cat pubspec.yaml | grep version | head -1) 
          patch=$(echo $oldver | awk -F. '{ print $3}') 
          newpatch=$(($patch+1)) 
          seg1=$(echo $oldver | awk -F. '{ print $1}') 
          seg2=$(echo $oldver | awk -F. '{ print $2}') 
          newver="$seg1.$seg2.$newpatch" 
          sed -i "s/$oldver/$newver/" pubspec.yaml
          upver=$(cat pubspec.yaml | grep version | head -1 | awk -F: '{ print$2}' | sed 's/^ *//g')
          echo "##[set-output name=upver;]$(echo "v$upver")"
        id: dart_new_version
      
      - name: house cleaning remove unnecessary files/folders
        working-directory: m3o-dart
        run: |
          rm -rf .dart_tool .gitignore .packages pubspec.lock
      
      - name: Add & Commit
        uses: EndBug/add-and-commit@v9.0.0
        with:
          cwd: m3o-dart
          message: Push to M3O-Dart repo
          pathspec_error_handling: exitImmediately

      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: generate latest release note from micro/services repo
        working-directory: m3o
        run: |
          cd cmd/release-note
          go install .
          note=$(release-note .)
          echo $note
          echo "##[set-output name=note;]$(echo "$note")" 
        id: micro_release_note
        
      - uses: ncipollo/release-action@v1.9.0
        with:
          tag: ${{ steps.dart_new_version.outputs.upver}}
          commit: main
          generateReleaseNotes: true
          body: |
            ${{ steps.micro_release_note.outputs.note }}
          token: ${{ secrets.API_TOKEN_GITHUB }}
